#!/usr/bin/make -f Makefile.linux

CC= gcc
CXX= g++
RM= rm -f

PROGRAM=OgreMeshy

# Build Mode (-mode=release -mode=debug)
ifeq ($(mode), release)
OPT_CFLAGS += -O2 -DNDEBUG
else
OPT_CFLAGS += -O0 -ggdb -DDEBUG
mode := debug
endif

all: $(PROGRAM)

SOURCES = $(shell find src -name "*.cpp")
OBJS = $(SOURCES:.cpp=.o)

PKG_CONFIG=OGRE OGRE-Bites OGRE-Overlay gdk-x11-3.0 atk gtk+-x11-3.0
WX_CONFIG=std,aui

PKG_CONFIG_CFLAGS=`wx-config --cflags $(WX_CONFIG)` `pkg-config --cflags $(PKG_CONFIG)`
PKG_CONFIG_LDFLAGS=`pkg-config --libs-only-L $(PKG_CONFIG)`
PKG_CONFIG_LIBS=`wx-config --libs $(WX_CONFIG)` `pkg-config --libs-only-l $(PKG_CONFIG)`

CFLAGS= -Iinclude $(OPT_CFLAGS) -Wall -Wno-unused-variable -Wno-unused-value -Wno-unused-but-set-variable
LDFLAGS= -Wl,--as-needed -Wl,--no-undefined -Wl,--no-allow-shlib-undefined
LIBS= 
OPTS= -O2 -g
DEFS=
INCS=

CSTD=-std=c11
CPPSTD=-std=c++17

$(PROGRAM): $(OBJS)
	$(CXX) $(CPPSTD) $(CSTD) $(LDFLAGS) $(PKG_CONFIG_LDFLAGS) $+ -o $@ $(LIBS) $(PKG_CONFIG_LIBS)

%.o: %.cpp
	$(CXX) $(CPPSTD) $(OPTS) -o $@ -c $+ $(DEFS) $(INCS) $(CFLAGS) $(PKG_CONFIG_CFLAGS)

%.o: %.c
	$(CC) $(CSTD) $(OPTS) -o $@ -c $+ $(DEFS) $(INCS) $(CFLAGS) $(PKG_CONFIG_CFLAGS)

resources:
	mkdir -pv Resources
	mkdir -pv Resources/Fonts
	mkdir -pv Resources/Models
	mkdir -pv Resources/Icons
	mkdir -pv Resources/Icons/32x32
	mkdir -pv Resources/RTShaderLib

	cp -rv scripts/Resources/Icons/32x32 Resources/Icons
	cp -v scripts/Resources/OgreIcon.ico Resources

	cp -rv scripts/Resources/Fonts/* Resources/Fonts
	cp -rv scripts/Resources/Other/* Resources/Models
	cp -rv scripts/Resources/RTShaderLib/* Resources/RTShaderLib

	cp -v scripts/Resources/Blender/Axis.material Resources/Models
	cp -v scripts/Resources/Blender/Axis.mesh Resources/Models
	cp -v scripts/Resources/Blender/Bones/BoneMesh.material Resources/Models
	cp -v scripts/Resources/Blender/Bones/Bones.png Resources/Models
	cp -v scripts/Resources/Blender/Bones/BoneTip.mesh Resources/Models
	cp -v scripts/Resources/Blender/Bones/BoneGlobe.mesh Resources/Models

	mkdir -pv Plugins

depend: .depend

.depend: $(SOURCES)
	$(RM) ./.depend
	$(CXX) $(CPPSTD) $(DEFS) $(INCS) $(CFLAGS) $(PKG_CONFIG_CFLAGS) -MM $^>>./.depend;

clean:
	$(RM) `find . -name '*.o' -o -name '*.a' -o -name '*~'`
	$(RM) $(PROGRAM) .depend core

include .depend

.PHONY: all depend clean resources
